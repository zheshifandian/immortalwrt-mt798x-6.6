From 41fa0111e78d72937b103e47973958c6d661c45e Mon Sep 17 00:00:00 2001
From: Bo-Cun Chen <bc-bocun.chen@mediatek.com>
Date: Wed, 27 Nov 2024 10:16:27 +0800
Subject: [PATCH] net: ethernet: mtk_eth_soc: support forced reset control

Without this patch, users are unable to control the forced reset
through the proprietary debugfs.

Signed-off-by: Bo-Cun Chen <bc-bocun.chen@mediatek.com>
---
 drivers/net/ethernet/mediatek/mtk_eth_soc.c | 6 ++++--
 drivers/net/ethernet/mediatek/mtk_eth_soc.h | 1 +
 2 files changed, 5 insertions(+), 2 deletions(-)

--- a/drivers/net/ethernet/mediatek/mtk_eth_soc.c
+++ b/drivers/net/ethernet/mediatek/mtk_eth_soc.c
@@ -3414,7 +3414,8 @@ static void mtk_tx_timeout(struct net_de
 	eth->netdev[mac->id]->stats.tx_errors++;
 	netif_err(eth, tx_err, dev, "transmit timed out\n");
 
-	schedule_work(&eth->pending_work);
+	if (atomic_read(&eth->reset.force))
+		schedule_work(&eth->pending_work);
 }
 
 static irqreturn_t mtk_handle_irq_rx(int irq, void *_eth)
@@ -4102,7 +4103,7 @@ static void mtk_hw_reset_monitor_work(st
 		goto out;
 
 	/* DMA stuck checks */
-	if (mtk_hw_check_dma_hang(eth))
+	if (mtk_hw_check_dma_hang(eth) && atomic_read(&eth->reset.force))
 		schedule_work(&eth->pending_work);
 
 out:
@@ -5142,6 +5143,7 @@ static int mtk_probe(struct platform_dev
 
 	eth->rx_dim.mode = DIM_CQ_PERIOD_MODE_START_FROM_EQE;
 	INIT_WORK(&eth->rx_dim.work, mtk_dim_rx);
+	atomic_set(&eth->reset.force, 0);
 	INIT_DELAYED_WORK(&eth->reset.monitor_work, mtk_hw_reset_monitor_work);
 
 	eth->tx_dim.mode = DIM_CQ_PERIOD_MODE_START_FROM_EQE;
--- a/drivers/net/ethernet/mediatek/mtk_eth_soc.h
+++ b/drivers/net/ethernet/mediatek/mtk_eth_soc.h
@@ -1429,6 +1429,7 @@ struct mtk_eth {
 
 	struct {
 		struct delayed_work monitor_work;
+		atomic_t force;
 		u32 wdidx;
 		u8 wdma_hang_count;
 		u8 qdma_hang_count;
