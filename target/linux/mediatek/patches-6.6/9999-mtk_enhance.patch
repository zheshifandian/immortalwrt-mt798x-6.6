--- a/drivers/net/ethernet/mediatek/mtk_eth_soc.c
+++ b/drivers/net/ethernet/mediatek/mtk_eth_soc.c
@@ -43,6 +43,8 @@ static int mtk_wifi_num = 0;
 static int mtk_rest_cnt = 0;
 atomic_t eth1_in_br = ATOMIC_INIT(0);
 EXPORT_SYMBOL(eth1_in_br);
+struct net_device *ppd_dev;
+EXPORT_SYMBOL(ppd_dev);
 static int mtk_msg_level = -1;
 module_param_named(msg_level, mtk_msg_level, int, 0);
 MODULE_PARM_DESC(msg_level, "Message level (-1=defaults,0=none,...,16=all)");
@@ -2445,6 +2447,7 @@ static int mtk_poll_rx(struct napi_struc
 	int done = 0, bytes = 0;
 	dma_addr_t dma_addr = DMA_MAPPING_ERROR;
 	int ppe_idx = 0;
+	int sent_ppd = 0;
 
 	if (unlikely(!ring))
 		goto rx_done;
@@ -2483,8 +2486,11 @@ static int mtk_poll_rx(struct napi_struc
 		}
 
 		if ( (mac == 4) || ((FIELD_GET(MTK_RXD4_PPE_CPU_REASON, trxd.rxd4)) == HIT_BIND_FORCE_TO_CPU))
+		{
+		
 		mac = atomic_read(&eth1_in_br);
-
+		sent_ppd = 1;
+		}
 		if (unlikely(mac < 0 || mac >= MTK_MAX_DEVS ||
 			     !eth->netdev[mac]))
 			goto release_desc;
@@ -2643,6 +2649,10 @@ static int mtk_poll_rx(struct napi_struc
 			hw_lro_flush_stats_update(ring->ring_no, &trxd);
 		}
 
+		if (sent_ppd && ppd_dev){
+		skb->protocol = eth_hdr(skb)->h_proto;
+		skb->dev = ppd_dev;
+		}
 		skb_record_rx_queue(skb, 0);
 		napi_gro_receive(napi, skb);
 
--- a/drivers/mtd/mtdblock_ro.c
+++ b/drivers/mtd/mtdblock_ro.c
@@ -48,10 +48,6 @@ static void mtdblock_add_mtd(struct mtd_
 	dev->tr = tr;
 	dev->readonly = 1;
 
-	if (mtd_type_is_nand(mtd))
-		pr_warn_ratelimited("%s: MTD device '%s' is NAND, please consider using UBI block devices instead.\n",
-			tr->name, mtd->name);
-
 	if (add_mtd_blktrans_dev(dev))
 		kfree(dev);
 }
--- a/drivers/mtd/mtdblock.c
+++ b/drivers/mtd/mtdblock.c
@@ -261,10 +261,6 @@ static int mtdblock_open(struct mtd_blkt
 		return 0;
 	}
 
-	if (mtd_type_is_nand(mbd->mtd))
-		pr_warn_ratelimited("%s: MTD device '%s' is NAND, please consider using UBI block devices instead.\n",
-			mbd->tr->name, mbd->mtd->name);
-
 	/* OK, it's not open. Create cache info for it */
 	mtdblk->count = 1;
 	mutex_init(&mtdblk->cache_mutex);
